{"version":3,"sources":["services/restApi.js","views/MoviesPage/MoviesPage.js"],"names":["axios","defaults","baseURL","key","fetchTrend","get","fetchMovie","movieId","fetchSearch","query","fetchCast","fetchReviews","MoviesPage","state","movies","inputChange","e","value","currentTarget","setState","handlerSubmit","preventDefault","fetch","then","data","results","this","onSubmit","type","onChange","map","movie","to","props","match","url","id","original_title","Component"],"mappings":"yIAAA,qBAEAA,IAAMC,SAASC,QAAU,+BACzB,IAAMC,EAAM,mCA0BG,KAAEC,WAxBE,WACjB,OAAOJ,IAAMK,IAAN,oCAAuCF,KAuBnBG,WApBV,SAAAC,GACjB,OAAOP,IAAMK,IAAN,iBAAoBE,EAApB,oBAAuCJ,EAAvC,qBAmBgCK,YAhBrB,SAAAC,GAClB,OAAOT,IAAMK,IAAN,gCACoBF,EADpB,iCACgDM,EADhD,gCAe6CC,UAVpC,SAAAH,GAChB,OAAOP,IAAMK,IAAN,iBAAoBE,EAApB,4BAA+CJ,EAA/C,qBASwDQ,aAN5C,SAAAJ,GACnB,OAAOP,IAAMK,IAAN,6CACiCE,EADjC,4BAC4DJ,EAD5D,8B,wGCpBHS,E,4MACJC,MAAQ,CACNJ,MAAO,GACPK,OAAQ,I,EAGVC,YAAc,SAAAC,GACZ,IAAMC,EAAQD,EAAEE,cAAcD,MAE9B,EAAKE,SAAS,CAAEV,MAAOQ,K,EAGzBG,cAAgB,SAAAJ,GACdA,EAAEK,iBAEFC,IACGd,YAAY,EAAKK,MAAMJ,OACvBc,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAc,EAAKL,SAAS,CAAEL,OAAQU,EAAKC,c,4CAGrD,WAAU,IAAD,SACmBC,KAAKb,MAAvBC,EADD,EACCA,OAAQL,EADT,EACSA,MAChB,OACE,qCACE,uBAAMkB,SAAUD,KAAKN,cAArB,UACE,uBAAOQ,KAAK,OAAOC,SAAUH,KAAKX,YAAaE,MAAOR,IACtD,wBAAQmB,KAAK,SAAb,uBAEDd,GACC,6BACGA,EAAOgB,KAAI,SAAAC,GAAK,OACf,6BACE,cAAC,IAAD,CAASC,GAAE,UAAK,EAAKC,MAAMC,MAAMC,IAAtB,YAA6BJ,EAAMK,IAA9C,SACGL,EAAMM,+B,GAjCAC,aA4CV1B","file":"static/js/movies-page.77457159.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\nconst key = 'cbf7b4582ce31cf384dd80d27cc60e4c';\r\n\r\nconst fetchTrend = () => {\r\n  return axios.get(`/trending/all/day?api_key=${key}`);\r\n};\r\n\r\nconst fetchMovie = movieId => {\r\n  return axios.get(`/movie/${movieId}?api_key=${key}&language=en-US`);\r\n};\r\n\r\nconst fetchSearch = query => {\r\n  return axios.get(\r\n    `/search/movie?api_key=${key}&language=en-US&query=${query}&page=1&include_adult=true`,\r\n  );\r\n};\r\n\r\nconst fetchCast = movieId => {\r\n  return axios.get(`/movie/${movieId}/credits?api_key=${key}&language=en-US`);\r\n};\r\n\r\nconst fetchReviews = movieId => {\r\n  return axios.get(\r\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`,\r\n  );\r\n};\r\n\r\nexport default { fetchTrend, fetchMovie, fetchSearch, fetchCast, fetchReviews };\r\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport fetch from '../../services/restApi';\n\nclass MoviesPage extends Component {\n  state = {\n    query: '',\n    movies: [],\n  };\n\n  inputChange = e => {\n    const value = e.currentTarget.value;\n\n    this.setState({ query: value });\n  };\n\n  handlerSubmit = e => {\n    e.preventDefault();\n\n    fetch\n      .fetchSearch(this.state.query)\n      .then(({ data }) => this.setState({ movies: data.results }));\n  };\n\n  render() {\n    const { movies, query } = this.state;\n    return (\n      <>\n        <form onSubmit={this.handlerSubmit}>\n          <input type=\"text\" onChange={this.inputChange} value={query} />\n          <button type=\"submit\">search</button>\n        </form>\n        {movies && (\n          <ul>\n            {movies.map(movie => (\n              <li>\n                <NavLink to={`${this.props.match.url}/${movie.id}`}>\n                  {movie.original_title}\n                </NavLink>\n              </li>\n            ))}\n          </ul>\n        )}\n      </>\n    );\n  }\n}\n\nexport default MoviesPage;\n"],"sourceRoot":""}